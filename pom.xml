<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.unihd.dbs</groupId>
	<artifactId>geoparser</artifactId>
	<version>1.0.0</version>
	<name>GeoParser Framework</name>
	<description>Library that provides a generic gazetteer data model as well as an extensible geoparsing framework.</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<developers>
		<developer>
			<id>lrichter</id>
			<name>Ludwig Richter</name>
			<email>ludwig.richter@posteo.de</email>
			<roles>
				<role>creator</role>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<build>
		<!-- Reuse all resources of src/main in src/test, which are neither test- 
			nor production specific (cf. http://stackoverflow.com/a/19220729) -->
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>${project.basedir}/src/main/resources/data</directory>
			</testResource>
			<testResource>
				<directory>${project.basedir}/src/main/resources/ui</directory>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<!-- We require Java 8 features -->
					<source>1.8</source>
					<target>1.8</target>
					<!-- Use a good amount of memory -->
					<meminitial>256m</meminitial>
					<maxmem>8192m</maxmem>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
				<skipTests>true</skipTests>
					<!-- Only run the tests bundled in AllTests -->
					<includes>
						<include>de.unihd.dbs.geoparser.AllTests.java</include>
					</includes>
					<!-- During experimentation, we don't want a build failure due to failing 
						tests -->
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<!-- Config-Resources will be placed under config/ -->
						<manifestEntries>
							<Class-Path>./config/</Class-Path>
						</manifestEntries>
					</archive>
					<!-- Exclude data and config resources from jar -->
					<excludes>
						<exclude>logback.xml</exclude>
						<exclude>geoparser.config.json</exclude>
						<exclude>data/**</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- State-of-the-art SLF4J implementation for convenient logger configuration 
			and high performance logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.9</version>
		</dependency>
		<!-- OpenNLP toolkit used for named entity recognition -->
		<dependency>
			<groupId>org.apache.opennlp</groupId>
			<artifactId>opennlp-tools</artifactId>
			<version>1.7.1</version>
		</dependency>
		<!-- StanfordNLP toolkit used for named entity recognition -->
		<dependency>
			<groupId>edu.stanford.nlp</groupId>
			<artifactId>stanford-corenlp</artifactId>
			<version>3.6.0</version><!-- there is a new version 3.7.0, but it requires 
				some changes! -->
		</dependency>
		<!-- StanfordNLP models used for named entity recognition (NOTE: this is 
			a large package that requires 360 MB) -->
		<dependency>
			<groupId>edu.stanford.nlp</groupId>
			<artifactId>stanford-corenlp</artifactId>
			<version>3.7.0</version>
			<classifier>models</classifier>
		</dependency>
		<!-- MongoDB-driver required for accessing MongoDB servers -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>3.4.1</version>
		</dependency>
		<!-- PostgreSQL-driver required for accessing PostreSQL servers -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.4.1212</version>
		</dependency>
		<!-- SSH2 implementation needed for SSH-Tunneling to access e.g., remote 
			databases -->
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.54</version>
		</dependency>
		<!-- GSON needed for processing JSON-strings/files (in GeoParserConfig) -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.0</version>
		</dependency>
		<!-- Well-Established Java Utilities Framework developed by Google -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>20.0</version>
        </dependency>
		<!-- JPA 2.1 specification and its implementation by Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>5.2.6.Final</version>
		</dependency>
		<!-- For Hibernate Spatial Support (required for Geometry fields in JPA 
			managed data schema) -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-spatial</artifactId>
			<version>5.2.6.Final</version>
		</dependency>
		<!-- Connection pooling support for Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>5.2.6.Final</version>
		</dependency>
		<!-- support for special JavaFX controls -->
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>8.40.12</version>
		</dependency>

		<!-- included for Benchmarking CLAVIN -->
		<dependency>
			<groupId>com.bericotech</groupId>
			<artifactId>clavin</artifactId>
			<version>2.1.0</version>
		</dependency>

		<!-- JUnit support for Unit-Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<!-- EqualsVerifier needed for convenient Unit Testing of equals() and 
			hashCode() methods -->
		<dependency>
			<groupId>nl.jqno.equalsverifier</groupId>
			<artifactId>equalsverifier</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>
		<!-- Hamcrest support for adding convenient assert-Methods to Unit Testing -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<!-- Framework for testing JavaFX applications -->
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-core</artifactId>
            <version>4.0.5-alpha</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit</artifactId>
            <version>4.0.5-alpha</version>
            <scope>test</scope>
        </dependency>
		<!-- Apache SSHD support for testing SSH connections via a SSH server simulation -->
		<dependency>
			<groupId>org.apache.sshd</groupId>
			<artifactId>sshd-core</artifactId>
			<version>1.3.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>