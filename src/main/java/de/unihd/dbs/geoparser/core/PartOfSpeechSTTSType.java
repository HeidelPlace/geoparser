package de.unihd.dbs.geoparser.core;

/**
 * STTS part-of-speech tags for German (Stuttgart TÃ¼bingen tag set).
 * <ul>
 * <li>General Source: http://paula.petcu.tm.ro/init/default/post/opennlp-part-of-speech-tags
 * <li>Source: http://isocat.org/rest/dcs/376
 * </ul>
 * 
 * 
 * @author lrichter
 *
 */
public enum PartOfSpeechSTTSType {

	// @formatter:off
	ATTRIBUTIVE_ADJECTIVE("ADJA"),
	ADVERBIAL_OR_PREDICATIVE_ADJECTIVE("ADJD"),
	ADVERB("ADV"),
	PREPOSITION("APPR"),
	PREPOSITION_WITH_ARTICLE_FOLDED_IN("APPRART"),
	POSTPOSITION("APPO"),
	RIGHT_PART_OF_CIRCUMPOSITION("APZR"),
	DEFINITE_OR_INDEFINITE_ARTICLE("ART"),
	CARDINAL_NUMBER("CARD"),
	FOREIGN_WORD("FM"),
	INTERJECTION("ITJ"),
	SUBORDINATING_CONJUNCTION_WITH_ZU_AND_INFINITIVE("KOUI"),
	SUBORDINATING_CONJUNCTION_WITH_SENTENCE("KOUS"),
	COORDINATING_CONJUNCTION("KON"),
	COMPARATIVE_CONJUNCTION("KOKOM"),
	COMMON_NOUN("NN"),
	PROPER_NOUN("NE"),
	SUBSTITUTING_DEMONSTRATIVE_PRONOUN("PDS"),
	ATTRIBUTIVE_DEMONSTRATIVE_PRONOUN("PDAT"),
	SUBSTITUTING_INDEFINITE_PRONOUN("PIS"),
	ATTRIBUTIVE_INDEFINITE_PRONOUN("PIAT"),
	ATTRIBUTIVE_INDEFINITE_PRONOUN_WITH_A_DETERMINER("PIDAT"),
	NON_REFLEXIVE_PERSONAL_PRONOUN("PPER"),
	SUBSTITUTING_POSSESSIVE_PRONOUN("PPOSS"),
	ATTRIBUTE_ADDING_POSESSIVE_PRONOUN("PPOSAT"),
	SUBSTITUTING_RELATIVE_PRONOUN("PRELS"),
	ATTRIBUTE_ADDING_RELATIVE_PRONOUN("PRELAT"),
	REFLEXIVE_PERSONAL_PRONOUN("PRF"),
	SUBSTITUTING_INTERROGATIVE_PRONOUN("PWS"),
	ATTRIBUTE_ADDING_INTERROGATIVE_PRONOUN("PWAT"),
	ADVERBIAL_INTERROGATIVE_OR_RELATIVE_PRONOUN("PWAV"),
	PRONOMINAL_ADVERB("PAV"),
	ZU_BEFORE_INFINITIVE("PTKZU"),
	NEGATION_PARTICLE("PTKNEG"),
	PARTICLE_PART_OF_SEPARABLE_VERB("PTKVZ"),
	ANSWER_PARTICLE("PTKANT"),
	PARTICLE_ASSOCIATED_WITH_ADVERB_OR_ADJECTIVE("PTKA"),
	FIRST_MEMBER_OF_COMPOUND_NOUN("TRUNC"),
	FULL_FINITE_VERB("VVFIN"),
	FULL_IMPERATIVE("VVIMP"),
	FULL_INFINITIVE("VVINF"),
	FULL_INFINITIVE_WITH_ZU("VVIZU"),
	FULL_PAST_PARTICIPLE("VVPP"),
	AUXILLIARY_FINITE_VERB("VAFIN"),
	AUXILLIARY_IMPERATIVE("VAIMP"),
	AUXILLIARY_INFINITIVE("VAINF"),
	AUXILLIARY_PAST_PARTICIPLE("VAPP"),
	MODAL_FINITE_VERB("VMFIN"),
	MODAL_INFINITIVE("VMINF"),
	MODAL_PAST_PARTICIPLE("VMPP"),
	NON_WORD_WITH_SPECIAL_CHARACTERS("XY"),
	COMMA("$,"),
	SENTENCE_ENDING_PUNCTUATION("$."),
	OTHER_SENTENCE_INTERNAL_PUNCTUATION("$(");
	// @formatter:on

	public final String name;

	private PartOfSpeechSTTSType(final String name) {
		this.name = name;
	}

	/**
	 * Return the {@link PartOfSpeechSTTSType} with given code.
	 * 
	 * @param code the STTS POS code.
	 * @return the matching {@link PartOfSpeechSTTSType} or {@link IllegalArgumentException} if no type with the given
	 *         code exists.
	 */
	public static PartOfSpeechSTTSType getByName(final String code) {
		for (final PartOfSpeechSTTSType type : PartOfSpeechSTTSType.values()) {
			if (type.name.equals(code)) {
				return type;
			}
		}
		throw new IllegalArgumentException("Unkown PartOfSpeechSTTSType `" + code + "`!");
	}

}
